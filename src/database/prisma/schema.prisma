// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

model Question {
  id            String    @id @default(uuid())
  etag          String    @default(uuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  prefix        String?
  metric        String?
  subject       String?
  publicity     Publicity @default(private)
  isListed      Boolean   @default(false)
  ownedBy       User      @relation("OwnedQuestions", fields: [ownedById], references: [id])
  ownedById     String
  tags          Tag[]
  answers       Answer[]
  favoritedBy   User[]    @relation("FavoriteQuestions")
}

model Answer {
  id        String   @id @default(uuid())
  etag      String   @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  text      String?
  publicity Publicity @default(private)
  tags      Tag[]
  questions Question[]
}

model Tag {
  key       String    @id     /// lowercase e.g. "dungeonsanddragons"
  display   String    @unique /// mixed-case e.g. "DungeonsAndDragons"
  answers   Answer[]
  questions Question[]
}

model User {
  id                  String      @id @default(uuid())
  etag                String      @default(uuid())
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
  email               String      @unique
  name                String?
  auth0UserId         String?
  ownedQuestions      Question[]  @relation("OwnedQuestions")
  favoriteQuestions   Question[]  @relation("FavoriteQuestions")
}

enum Publicity {
  private
  public
  anonymous
}
